name: Packwiz Export and Release

on:
  push:
    branches:
      - main  # Trigger when there is a push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # You can change to windows-latest if needed
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download and install Packwiz nightly build
        run: |
          # Download the latest nightly build as a ZIP file
          NIGHTLY_URL="https://nightly.link/packwiz/packwiz/workflows/go/main/Linux%2064-bit%20x86.zip"
          curl -L $NIGHTLY_URL -o packwiz-nightly.zip
          
          # Unzip the downloaded file
          unzip packwiz-nightly.zip -d packwiz
          
          # Make the packwiz binary executable
          chmod +x packwiz/packwiz
          
          # Create the directory if it doesn't exist and move the binary to it
          mkdir -p $HOME/.local/bin
          mv packwiz/packwiz $HOME/.local/bin/
          
          # Add the directory to the PATH for the current session
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Run Packwiz export
        run: |
          # The modpack is located at the root of the repository, no need to change the directory
          packwiz curseforge export

      - name: List files after export
        run: ls -alh  # Check if the ZIP file exists

      - name: Create a new tag
        id: create_tag
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          TAG_NAME="v${COMMIT_HASH}"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV  # Store the tag in the environment for later steps

      - name: Create GitHub Release and Upload ZIP
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ github.workspace }}/*.zip
          tag_name: ${{ env.TAG_NAME }}  # Use the tag name from the environment variable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
